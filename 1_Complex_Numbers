#include <iostream>
using namespace std;
class complex
{
private:
int real, imag;
public:
complex()
{
real=0;
imag=0;
}
complex(int r, int i)
{
real = r;
imag = i;
}
complex operator + (complex const &obj)
{
complex temp;
temp.real = real + obj.real;
temp.imag = imag + obj.imag;
return temp;
}
complex operator * (complex const &obj)
{
complex temp;
temp.real = ((real)*(obj.real)) - ((imag)*(obj.imag));
temp.imag = ((real)*(obj.imag)) + ((obj.real)*(imag));
return temp;
}
friend istream & operator >> (istream &in,complex &obj);
friend ostream & operator << (ostream &out,complex &obj);
};
istream &operator >> (istream &in,complex &obj)
{
cout<<"\n Enter real part: ";
in>>obj.real;
cout<<"\n Enter imaginary part: ";
in>>obj.imag;
return in;
}
ostream &operator << (ostream &out,complex &obj)
{
out<<obj.real;
out<<"+"<<obj.imag<<"i";
return out;
}
int main()
{
complex c1,c2,c3,c4;
cout<< "\n Enter first number:";
cin>>c1;
cout<<endl<<"First complex number is = "<<c1<<endl;
cout<< "\n Enter second number:";
cin>>c2;
cout<<endl<<"Second complex number is = "<<c2<<endl;
c3 = c1 + c2;
cout<<"\n Addition is : "<<c3;
c4 = c1 * c2;
cout<<"\n Multiplication is : "<<c4;
return 0;
}
